//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TanHoaPushNotification.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MapSoap", Namespace="http://tempuri.org/")]
    public partial class Map : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ConfirmAlarmOperationCompleted;
        
        private System.Threading.SendOrPostCallback ControlSamplerOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteChannelByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSiteConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback DologinOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlarmOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSiteAvailabilitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSiteStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelByChannelIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelConfigByLoggerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelConfigurationsByLoggerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetchanneldetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelLoggerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountAlamrOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomComplexDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomComplexDataForSiteIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeviceTokenFromAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupChannelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListCuscomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListDataControlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMultipleChannelsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteByGroupSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSitesByUidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSitesForMapOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTakeSampleHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValueConfigloggerOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertUpdateChannelConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertUpdateConfigLoggerOperationCompleted;
        
        private System.Threading.SendOrPostCallback LatLngOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoOperationCompleted;
        
        private System.Threading.SendOrPostCallback PushNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveTokenLogoutAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetSamplerOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStatusPushNotiOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Map() {
            this.Url = global::TanHoaPushNotification.Properties.Settings.Default.TanHoaPushNotification_localhost_Map;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ConfirmAlarmCompletedEventHandler ConfirmAlarmCompleted;
        
        /// <remarks/>
        public event ControlSamplerCompletedEventHandler ControlSamplerCompleted;
        
        /// <remarks/>
        public event DeleteChannelByIdCompletedEventHandler DeleteChannelByIdCompleted;
        
        /// <remarks/>
        public event DeleteSiteConfigCompletedEventHandler DeleteSiteConfigCompleted;
        
        /// <remarks/>
        public event DologinCompletedEventHandler DologinCompleted;
        
        /// <remarks/>
        public event GetAlarmCompletedEventHandler GetAlarmCompleted;
        
        /// <remarks/>
        public event GetAllSiteAvailabilitiesCompletedEventHandler GetAllSiteAvailabilitiesCompleted;
        
        /// <remarks/>
        public event GetAllSiteStatusCompletedEventHandler GetAllSiteStatusCompleted;
        
        /// <remarks/>
        public event GetChannelByChannelIdCompletedEventHandler GetChannelByChannelIdCompleted;
        
        /// <remarks/>
        public event GetChannelConfigByLoggerIDCompletedEventHandler GetChannelConfigByLoggerIDCompleted;
        
        /// <remarks/>
        public event GetChannelConfigurationsByLoggerIDCompletedEventHandler GetChannelConfigurationsByLoggerIDCompleted;
        
        /// <remarks/>
        public event GetchanneldetailCompletedEventHandler GetchanneldetailCompleted;
        
        /// <remarks/>
        public event GetChannelLoggerIDCompletedEventHandler GetChannelLoggerIDCompleted;
        
        /// <remarks/>
        public event GetCountAlamrCompletedEventHandler GetCountAlamrCompleted;
        
        /// <remarks/>
        public event GetCustomComplexDataCompletedEventHandler GetCustomComplexDataCompleted;
        
        /// <remarks/>
        public event GetCustomComplexDataForSiteIdCompletedEventHandler GetCustomComplexDataForSiteIdCompleted;
        
        /// <remarks/>
        public event GetCustomSearchCompletedEventHandler GetCustomSearchCompleted;
        
        /// <remarks/>
        public event GetDataAllCompletedEventHandler GetDataAllCompleted;
        
        /// <remarks/>
        public event GetDeviceTokenFromAppCompletedEventHandler GetDeviceTokenFromAppCompleted;
        
        /// <remarks/>
        public event GetGroupChannelsCompletedEventHandler GetGroupChannelsCompleted;
        
        /// <remarks/>
        public event GetGroupSiteCompletedEventHandler GetGroupSiteCompleted;
        
        /// <remarks/>
        public event GetListCuscomerCompletedEventHandler GetListCuscomerCompleted;
        
        /// <remarks/>
        public event GetListDataControlCompletedEventHandler GetListDataControlCompleted;
        
        /// <remarks/>
        public event GetMultipleChannelsDataCompletedEventHandler GetMultipleChannelsDataCompleted;
        
        /// <remarks/>
        public event GetSiteCompletedEventHandler GetSiteCompleted;
        
        /// <remarks/>
        public event GetSiteByGroupSiteCompletedEventHandler GetSiteByGroupSiteCompleted;
        
        /// <remarks/>
        public event GetSitesByUidCompletedEventHandler GetSitesByUidCompleted;
        
        /// <remarks/>
        public event GetSitesForMapCompletedEventHandler GetSitesForMapCompleted;
        
        /// <remarks/>
        public event GetTakeSampleHistoryCompletedEventHandler GetTakeSampleHistoryCompleted;
        
        /// <remarks/>
        public event GetUnitsCompletedEventHandler GetUnitsCompleted;
        
        /// <remarks/>
        public event GetValueConfigloggerCompletedEventHandler GetValueConfigloggerCompleted;
        
        /// <remarks/>
        public event InsertUpdateChannelConfigCompletedEventHandler InsertUpdateChannelConfigCompleted;
        
        /// <remarks/>
        public event InsertUpdateConfigLoggerCompletedEventHandler InsertUpdateConfigLoggerCompleted;
        
        /// <remarks/>
        public event LatLngCompletedEventHandler LatLngCompleted;
        
        /// <remarks/>
        public event LogoCompletedEventHandler LogoCompleted;
        
        /// <remarks/>
        public event PushNotificationCompletedEventHandler PushNotificationCompleted;
        
        /// <remarks/>
        public event RemoveTokenLogoutAppCompletedEventHandler RemoveTokenLogoutAppCompleted;
        
        /// <remarks/>
        public event ResetSamplerCompletedEventHandler ResetSamplerCompleted;
        
        /// <remarks/>
        public event SendNotificationCompletedEventHandler SendNotificationCompleted;
        
        /// <remarks/>
        public event SubmitNotificationCompletedEventHandler SubmitNotificationCompleted;
        
        /// <remarks/>
        public event UpdateStatusPushNotiCompletedEventHandler UpdateStatusPushNotiCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmAlarm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ConfirmAlarm(string username) {
            object[] results = this.Invoke("ConfirmAlarm", new object[] {
                        username});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmAlarmAsync(string username) {
            this.ConfirmAlarmAsync(username, null);
        }
        
        /// <remarks/>
        public void ConfirmAlarmAsync(string username, object userState) {
            if ((this.ConfirmAlarmOperationCompleted == null)) {
                this.ConfirmAlarmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmAlarmOperationCompleted);
            }
            this.InvokeAsync("ConfirmAlarm", new object[] {
                        username}, this.ConfirmAlarmOperationCompleted, userState);
        }
        
        private void OnConfirmAlarmOperationCompleted(object arg) {
            if ((this.ConfirmAlarmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmAlarmCompleted(this, new ConfirmAlarmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ControlSampler", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public result_sampler ControlSampler(string siteid, string ip, string port, string username) {
            object[] results = this.Invoke("ControlSampler", new object[] {
                        siteid,
                        ip,
                        port,
                        username});
            return ((result_sampler)(results[0]));
        }
        
        /// <remarks/>
        public void ControlSamplerAsync(string siteid, string ip, string port, string username) {
            this.ControlSamplerAsync(siteid, ip, port, username, null);
        }
        
        /// <remarks/>
        public void ControlSamplerAsync(string siteid, string ip, string port, string username, object userState) {
            if ((this.ControlSamplerOperationCompleted == null)) {
                this.ControlSamplerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnControlSamplerOperationCompleted);
            }
            this.InvokeAsync("ControlSampler", new object[] {
                        siteid,
                        ip,
                        port,
                        username}, this.ControlSamplerOperationCompleted, userState);
        }
        
        private void OnControlSamplerOperationCompleted(object arg) {
            if ((this.ControlSamplerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ControlSamplerCompleted(this, new ControlSamplerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteChannelById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteChannelById(string channelid) {
            object[] results = this.Invoke("DeleteChannelById", new object[] {
                        channelid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteChannelByIdAsync(string channelid) {
            this.DeleteChannelByIdAsync(channelid, null);
        }
        
        /// <remarks/>
        public void DeleteChannelByIdAsync(string channelid, object userState) {
            if ((this.DeleteChannelByIdOperationCompleted == null)) {
                this.DeleteChannelByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteChannelByIdOperationCompleted);
            }
            this.InvokeAsync("DeleteChannelById", new object[] {
                        channelid}, this.DeleteChannelByIdOperationCompleted, userState);
        }
        
        private void OnDeleteChannelByIdOperationCompleted(object arg) {
            if ((this.DeleteChannelByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteChannelByIdCompleted(this, new DeleteChannelByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSiteConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteSiteConfig(string siteId) {
            object[] results = this.Invoke("DeleteSiteConfig", new object[] {
                        siteId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSiteConfigAsync(string siteId) {
            this.DeleteSiteConfigAsync(siteId, null);
        }
        
        /// <remarks/>
        public void DeleteSiteConfigAsync(string siteId, object userState) {
            if ((this.DeleteSiteConfigOperationCompleted == null)) {
                this.DeleteSiteConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSiteConfigOperationCompleted);
            }
            this.InvokeAsync("DeleteSiteConfig", new object[] {
                        siteId}, this.DeleteSiteConfigOperationCompleted, userState);
        }
        
        private void OnDeleteSiteConfigOperationCompleted(object arg) {
            if ((this.DeleteSiteConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSiteConfigCompleted(this, new DeleteSiteConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Dologin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public myLogin Dologin(string user, string pass) {
            object[] results = this.Invoke("Dologin", new object[] {
                        user,
                        pass});
            return ((myLogin)(results[0]));
        }
        
        /// <remarks/>
        public void DologinAsync(string user, string pass) {
            this.DologinAsync(user, pass, null);
        }
        
        /// <remarks/>
        public void DologinAsync(string user, string pass, object userState) {
            if ((this.DologinOperationCompleted == null)) {
                this.DologinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDologinOperationCompleted);
            }
            this.InvokeAsync("Dologin", new object[] {
                        user,
                        pass}, this.DologinOperationCompleted, userState);
        }
        
        private void OnDologinOperationCompleted(object arg) {
            if ((this.DologinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DologinCompleted(this, new DologinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAlarm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AlarmAll[] GetAlarm(string username) {
            object[] results = this.Invoke("GetAlarm", new object[] {
                        username});
            return ((AlarmAll[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAlarmAsync(string username) {
            this.GetAlarmAsync(username, null);
        }
        
        /// <remarks/>
        public void GetAlarmAsync(string username, object userState) {
            if ((this.GetAlarmOperationCompleted == null)) {
                this.GetAlarmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlarmOperationCompleted);
            }
            this.InvokeAsync("GetAlarm", new object[] {
                        username}, this.GetAlarmOperationCompleted, userState);
        }
        
        private void OnGetAlarmOperationCompleted(object arg) {
            if ((this.GetAlarmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlarmCompleted(this, new GetAlarmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllSiteAvailabilities", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public tSiteAvailabilities[] GetAllSiteAvailabilities() {
            object[] results = this.Invoke("GetAllSiteAvailabilities", new object[0]);
            return ((tSiteAvailabilities[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSiteAvailabilitiesAsync() {
            this.GetAllSiteAvailabilitiesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllSiteAvailabilitiesAsync(object userState) {
            if ((this.GetAllSiteAvailabilitiesOperationCompleted == null)) {
                this.GetAllSiteAvailabilitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSiteAvailabilitiesOperationCompleted);
            }
            this.InvokeAsync("GetAllSiteAvailabilities", new object[0], this.GetAllSiteAvailabilitiesOperationCompleted, userState);
        }
        
        private void OnGetAllSiteAvailabilitiesOperationCompleted(object arg) {
            if ((this.GetAllSiteAvailabilitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSiteAvailabilitiesCompleted(this, new GetAllSiteAvailabilitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllSiteStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public tSiteStatus[] GetAllSiteStatus() {
            object[] results = this.Invoke("GetAllSiteStatus", new object[0]);
            return ((tSiteStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSiteStatusAsync() {
            this.GetAllSiteStatusAsync(null);
        }
        
        /// <remarks/>
        public void GetAllSiteStatusAsync(object userState) {
            if ((this.GetAllSiteStatusOperationCompleted == null)) {
                this.GetAllSiteStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSiteStatusOperationCompleted);
            }
            this.InvokeAsync("GetAllSiteStatus", new object[0], this.GetAllSiteStatusOperationCompleted, userState);
        }
        
        private void OnGetAllSiteStatusOperationCompleted(object arg) {
            if ((this.GetAllSiteStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSiteStatusCompleted(this, new GetAllSiteStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChannelByChannelId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public tChannelConfigurations GetChannelByChannelId(string channelId) {
            object[] results = this.Invoke("GetChannelByChannelId", new object[] {
                        channelId});
            return ((tChannelConfigurations)(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelByChannelIdAsync(string channelId) {
            this.GetChannelByChannelIdAsync(channelId, null);
        }
        
        /// <remarks/>
        public void GetChannelByChannelIdAsync(string channelId, object userState) {
            if ((this.GetChannelByChannelIdOperationCompleted == null)) {
                this.GetChannelByChannelIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelByChannelIdOperationCompleted);
            }
            this.InvokeAsync("GetChannelByChannelId", new object[] {
                        channelId}, this.GetChannelByChannelIdOperationCompleted, userState);
        }
        
        private void OnGetChannelByChannelIdOperationCompleted(object arg) {
            if ((this.GetChannelByChannelIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelByChannelIdCompleted(this, new GetChannelByChannelIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChannelConfigByLoggerID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public tChannelConfigurations[] GetChannelConfigByLoggerID(string loggerId) {
            object[] results = this.Invoke("GetChannelConfigByLoggerID", new object[] {
                        loggerId});
            return ((tChannelConfigurations[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelConfigByLoggerIDAsync(string loggerId) {
            this.GetChannelConfigByLoggerIDAsync(loggerId, null);
        }
        
        /// <remarks/>
        public void GetChannelConfigByLoggerIDAsync(string loggerId, object userState) {
            if ((this.GetChannelConfigByLoggerIDOperationCompleted == null)) {
                this.GetChannelConfigByLoggerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelConfigByLoggerIDOperationCompleted);
            }
            this.InvokeAsync("GetChannelConfigByLoggerID", new object[] {
                        loggerId}, this.GetChannelConfigByLoggerIDOperationCompleted, userState);
        }
        
        private void OnGetChannelConfigByLoggerIDOperationCompleted(object arg) {
            if ((this.GetChannelConfigByLoggerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelConfigByLoggerIDCompleted(this, new GetChannelConfigByLoggerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChannelConfigurationsByLoggerID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MChannel[] GetChannelConfigurationsByLoggerID(string loggerId) {
            object[] results = this.Invoke("GetChannelConfigurationsByLoggerID", new object[] {
                        loggerId});
            return ((MChannel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelConfigurationsByLoggerIDAsync(string loggerId) {
            this.GetChannelConfigurationsByLoggerIDAsync(loggerId, null);
        }
        
        /// <remarks/>
        public void GetChannelConfigurationsByLoggerIDAsync(string loggerId, object userState) {
            if ((this.GetChannelConfigurationsByLoggerIDOperationCompleted == null)) {
                this.GetChannelConfigurationsByLoggerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelConfigurationsByLoggerIDOperationCompleted);
            }
            this.InvokeAsync("GetChannelConfigurationsByLoggerID", new object[] {
                        loggerId}, this.GetChannelConfigurationsByLoggerIDOperationCompleted, userState);
        }
        
        private void OnGetChannelConfigurationsByLoggerIDOperationCompleted(object arg) {
            if ((this.GetChannelConfigurationsByLoggerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelConfigurationsByLoggerIDCompleted(this, new GetChannelConfigurationsByLoggerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Getchanneldetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LoggerData[] Getchanneldetail(string channel, string startDate, string endDate, bool isGraph) {
            object[] results = this.Invoke("Getchanneldetail", new object[] {
                        channel,
                        startDate,
                        endDate,
                        isGraph});
            return ((LoggerData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetchanneldetailAsync(string channel, string startDate, string endDate, bool isGraph) {
            this.GetchanneldetailAsync(channel, startDate, endDate, isGraph, null);
        }
        
        /// <remarks/>
        public void GetchanneldetailAsync(string channel, string startDate, string endDate, bool isGraph, object userState) {
            if ((this.GetchanneldetailOperationCompleted == null)) {
                this.GetchanneldetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetchanneldetailOperationCompleted);
            }
            this.InvokeAsync("Getchanneldetail", new object[] {
                        channel,
                        startDate,
                        endDate,
                        isGraph}, this.GetchanneldetailOperationCompleted, userState);
        }
        
        private void OnGetchanneldetailOperationCompleted(object arg) {
            if ((this.GetchanneldetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetchanneldetailCompleted(this, new GetchanneldetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChannelLoggerID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MChannelNew[] GetChannelLoggerID(string loggerId) {
            object[] results = this.Invoke("GetChannelLoggerID", new object[] {
                        loggerId});
            return ((MChannelNew[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelLoggerIDAsync(string loggerId) {
            this.GetChannelLoggerIDAsync(loggerId, null);
        }
        
        /// <remarks/>
        public void GetChannelLoggerIDAsync(string loggerId, object userState) {
            if ((this.GetChannelLoggerIDOperationCompleted == null)) {
                this.GetChannelLoggerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelLoggerIDOperationCompleted);
            }
            this.InvokeAsync("GetChannelLoggerID", new object[] {
                        loggerId}, this.GetChannelLoggerIDOperationCompleted, userState);
        }
        
        private void OnGetChannelLoggerIDOperationCompleted(object arg) {
            if ((this.GetChannelLoggerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelLoggerIDCompleted(this, new GetChannelLoggerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCountAlamr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCountAlamr(string username) {
            object[] results = this.Invoke("GetCountAlamr", new object[] {
                        username});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountAlamrAsync(string username) {
            this.GetCountAlamrAsync(username, null);
        }
        
        /// <remarks/>
        public void GetCountAlamrAsync(string username, object userState) {
            if ((this.GetCountAlamrOperationCompleted == null)) {
                this.GetCountAlamrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountAlamrOperationCompleted);
            }
            this.InvokeAsync("GetCountAlamr", new object[] {
                        username}, this.GetCountAlamrOperationCompleted, userState);
        }
        
        private void OnGetCountAlamrOperationCompleted(object arg) {
            if ((this.GetCountAlamrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountAlamrCompleted(this, new GetCountAlamrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomComplexData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ComplexData[] GetCustomComplexData() {
            object[] results = this.Invoke("GetCustomComplexData", new object[0]);
            return ((ComplexData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomComplexDataAsync() {
            this.GetCustomComplexDataAsync(null);
        }
        
        /// <remarks/>
        public void GetCustomComplexDataAsync(object userState) {
            if ((this.GetCustomComplexDataOperationCompleted == null)) {
                this.GetCustomComplexDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomComplexDataOperationCompleted);
            }
            this.InvokeAsync("GetCustomComplexData", new object[0], this.GetCustomComplexDataOperationCompleted, userState);
        }
        
        private void OnGetCustomComplexDataOperationCompleted(object arg) {
            if ((this.GetCustomComplexDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomComplexDataCompleted(this, new GetCustomComplexDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomComplexDataForSiteId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ComplexData[] GetCustomComplexDataForSiteId(string SiteId) {
            object[] results = this.Invoke("GetCustomComplexDataForSiteId", new object[] {
                        SiteId});
            return ((ComplexData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomComplexDataForSiteIdAsync(string SiteId) {
            this.GetCustomComplexDataForSiteIdAsync(SiteId, null);
        }
        
        /// <remarks/>
        public void GetCustomComplexDataForSiteIdAsync(string SiteId, object userState) {
            if ((this.GetCustomComplexDataForSiteIdOperationCompleted == null)) {
                this.GetCustomComplexDataForSiteIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomComplexDataForSiteIdOperationCompleted);
            }
            this.InvokeAsync("GetCustomComplexDataForSiteId", new object[] {
                        SiteId}, this.GetCustomComplexDataForSiteIdOperationCompleted, userState);
        }
        
        private void OnGetCustomComplexDataForSiteIdOperationCompleted(object arg) {
            if ((this.GetCustomComplexDataForSiteIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomComplexDataForSiteIdCompleted(this, new GetCustomComplexDataForSiteIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomSearch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ComplexData[] GetCustomSearch(string search) {
            object[] results = this.Invoke("GetCustomSearch", new object[] {
                        search});
            return ((ComplexData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomSearchAsync(string search) {
            this.GetCustomSearchAsync(search, null);
        }
        
        /// <remarks/>
        public void GetCustomSearchAsync(string search, object userState) {
            if ((this.GetCustomSearchOperationCompleted == null)) {
                this.GetCustomSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomSearchOperationCompleted);
            }
            this.InvokeAsync("GetCustomSearch", new object[] {
                        search}, this.GetCustomSearchOperationCompleted, userState);
        }
        
        private void OnGetCustomSearchOperationCompleted(object arg) {
            if ((this.GetCustomSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomSearchCompleted(this, new GetCustomSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GroupLogger[] GetDataAll(string username) {
            object[] results = this.Invoke("GetDataAll", new object[] {
                        username});
            return ((GroupLogger[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAllAsync(string username) {
            this.GetDataAllAsync(username, null);
        }
        
        /// <remarks/>
        public void GetDataAllAsync(string username, object userState) {
            if ((this.GetDataAllOperationCompleted == null)) {
                this.GetDataAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataAllOperationCompleted);
            }
            this.InvokeAsync("GetDataAll", new object[] {
                        username}, this.GetDataAllOperationCompleted, userState);
        }
        
        private void OnGetDataAllOperationCompleted(object arg) {
            if ((this.GetDataAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataAllCompleted(this, new GetDataAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeviceTokenFromApp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetDeviceTokenFromApp(string username, string deviceToken) {
            object[] results = this.Invoke("GetDeviceTokenFromApp", new object[] {
                        username,
                        deviceToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeviceTokenFromAppAsync(string username, string deviceToken) {
            this.GetDeviceTokenFromAppAsync(username, deviceToken, null);
        }
        
        /// <remarks/>
        public void GetDeviceTokenFromAppAsync(string username, string deviceToken, object userState) {
            if ((this.GetDeviceTokenFromAppOperationCompleted == null)) {
                this.GetDeviceTokenFromAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeviceTokenFromAppOperationCompleted);
            }
            this.InvokeAsync("GetDeviceTokenFromApp", new object[] {
                        username,
                        deviceToken}, this.GetDeviceTokenFromAppOperationCompleted, userState);
        }
        
        private void OnGetDeviceTokenFromAppOperationCompleted(object arg) {
            if ((this.GetDeviceTokenFromAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeviceTokenFromAppCompleted(this, new GetDeviceTokenFromAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGroupChannels", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public tGroupChannel[] GetGroupChannels() {
            object[] results = this.Invoke("GetGroupChannels", new object[0]);
            return ((tGroupChannel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupChannelsAsync() {
            this.GetGroupChannelsAsync(null);
        }
        
        /// <remarks/>
        public void GetGroupChannelsAsync(object userState) {
            if ((this.GetGroupChannelsOperationCompleted == null)) {
                this.GetGroupChannelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupChannelsOperationCompleted);
            }
            this.InvokeAsync("GetGroupChannels", new object[0], this.GetGroupChannelsOperationCompleted, userState);
        }
        
        private void OnGetGroupChannelsOperationCompleted(object arg) {
            if ((this.GetGroupChannelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupChannelsCompleted(this, new GetGroupChannelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGroupSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DisplayGroup[] GetGroupSite() {
            object[] results = this.Invoke("GetGroupSite", new object[0]);
            return ((DisplayGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupSiteAsync() {
            this.GetGroupSiteAsync(null);
        }
        
        /// <remarks/>
        public void GetGroupSiteAsync(object userState) {
            if ((this.GetGroupSiteOperationCompleted == null)) {
                this.GetGroupSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupSiteOperationCompleted);
            }
            this.InvokeAsync("GetGroupSite", new object[0], this.GetGroupSiteOperationCompleted, userState);
        }
        
        private void OnGetGroupSiteOperationCompleted(object arg) {
            if ((this.GetGroupSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupSiteCompleted(this, new GetGroupSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListCuscomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MyCusComer[] GetListCuscomer() {
            object[] results = this.Invoke("GetListCuscomer", new object[0]);
            return ((MyCusComer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetListCuscomerAsync() {
            this.GetListCuscomerAsync(null);
        }
        
        /// <remarks/>
        public void GetListCuscomerAsync(object userState) {
            if ((this.GetListCuscomerOperationCompleted == null)) {
                this.GetListCuscomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListCuscomerOperationCompleted);
            }
            this.InvokeAsync("GetListCuscomer", new object[0], this.GetListCuscomerOperationCompleted, userState);
        }
        
        private void OnGetListCuscomerOperationCompleted(object arg) {
            if ((this.GetListCuscomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListCuscomerCompleted(this, new GetListCuscomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListDataControl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MSampler[] GetListDataControl(string userName) {
            object[] results = this.Invoke("GetListDataControl", new object[] {
                        userName});
            return ((MSampler[])(results[0]));
        }
        
        /// <remarks/>
        public void GetListDataControlAsync(string userName) {
            this.GetListDataControlAsync(userName, null);
        }
        
        /// <remarks/>
        public void GetListDataControlAsync(string userName, object userState) {
            if ((this.GetListDataControlOperationCompleted == null)) {
                this.GetListDataControlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListDataControlOperationCompleted);
            }
            this.InvokeAsync("GetListDataControl", new object[] {
                        userName}, this.GetListDataControlOperationCompleted, userState);
        }
        
        private void OnGetListDataControlOperationCompleted(object arg) {
            if ((this.GetListDataControlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListDataControlCompleted(this, new GetListDataControlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMultipleChannelsData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ChannelMultipleDataViewModel[] GetMultipleChannelsData(string listChannelId, string startDate, string endDate) {
            object[] results = this.Invoke("GetMultipleChannelsData", new object[] {
                        listChannelId,
                        startDate,
                        endDate});
            return ((ChannelMultipleDataViewModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMultipleChannelsDataAsync(string listChannelId, string startDate, string endDate) {
            this.GetMultipleChannelsDataAsync(listChannelId, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetMultipleChannelsDataAsync(string listChannelId, string startDate, string endDate, object userState) {
            if ((this.GetMultipleChannelsDataOperationCompleted == null)) {
                this.GetMultipleChannelsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMultipleChannelsDataOperationCompleted);
            }
            this.InvokeAsync("GetMultipleChannelsData", new object[] {
                        listChannelId,
                        startDate,
                        endDate}, this.GetMultipleChannelsDataOperationCompleted, userState);
        }
        
        private void OnGetMultipleChannelsDataOperationCompleted(object arg) {
            if ((this.GetMultipleChannelsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMultipleChannelsDataCompleted(this, new GetMultipleChannelsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public mySite GetSite(string siteID) {
            object[] results = this.Invoke("GetSite", new object[] {
                        siteID});
            return ((mySite)(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteAsync(string siteID) {
            this.GetSiteAsync(siteID, null);
        }
        
        /// <remarks/>
        public void GetSiteAsync(string siteID, object userState) {
            if ((this.GetSiteOperationCompleted == null)) {
                this.GetSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteOperationCompleted);
            }
            this.InvokeAsync("GetSite", new object[] {
                        siteID}, this.GetSiteOperationCompleted, userState);
        }
        
        private void OnGetSiteOperationCompleted(object arg) {
            if ((this.GetSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteCompleted(this, new GetSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSiteByGroupSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MSite[] GetSiteByGroupSite(string groupSite) {
            object[] results = this.Invoke("GetSiteByGroupSite", new object[] {
                        groupSite});
            return ((MSite[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteByGroupSiteAsync(string groupSite) {
            this.GetSiteByGroupSiteAsync(groupSite, null);
        }
        
        /// <remarks/>
        public void GetSiteByGroupSiteAsync(string groupSite, object userState) {
            if ((this.GetSiteByGroupSiteOperationCompleted == null)) {
                this.GetSiteByGroupSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteByGroupSiteOperationCompleted);
            }
            this.InvokeAsync("GetSiteByGroupSite", new object[] {
                        groupSite}, this.GetSiteByGroupSiteOperationCompleted, userState);
        }
        
        private void OnGetSiteByGroupSiteOperationCompleted(object arg) {
            if ((this.GetSiteByGroupSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteByGroupSiteCompleted(this, new GetSiteByGroupSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSitesByUid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MSite[] GetSitesByUid(string username) {
            object[] results = this.Invoke("GetSitesByUid", new object[] {
                        username});
            return ((MSite[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSitesByUidAsync(string username) {
            this.GetSitesByUidAsync(username, null);
        }
        
        /// <remarks/>
        public void GetSitesByUidAsync(string username, object userState) {
            if ((this.GetSitesByUidOperationCompleted == null)) {
                this.GetSitesByUidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSitesByUidOperationCompleted);
            }
            this.InvokeAsync("GetSitesByUid", new object[] {
                        username}, this.GetSitesByUidOperationCompleted, userState);
        }
        
        private void OnGetSitesByUidOperationCompleted(object arg) {
            if ((this.GetSitesByUidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSitesByUidCompleted(this, new GetSitesByUidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSitesForMap", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MSite[] GetSitesForMap(string username) {
            object[] results = this.Invoke("GetSitesForMap", new object[] {
                        username});
            return ((MSite[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSitesForMapAsync(string username) {
            this.GetSitesForMapAsync(username, null);
        }
        
        /// <remarks/>
        public void GetSitesForMapAsync(string username, object userState) {
            if ((this.GetSitesForMapOperationCompleted == null)) {
                this.GetSitesForMapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSitesForMapOperationCompleted);
            }
            this.InvokeAsync("GetSitesForMap", new object[] {
                        username}, this.GetSitesForMapOperationCompleted, userState);
        }
        
        private void OnGetSitesForMapOperationCompleted(object arg) {
            if ((this.GetSitesForMapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSitesForMapCompleted(this, new GetSitesForMapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTakeSampleHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public t_TakeSampleHistory[] GetTakeSampleHistory(string username) {
            object[] results = this.Invoke("GetTakeSampleHistory", new object[] {
                        username});
            return ((t_TakeSampleHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTakeSampleHistoryAsync(string username) {
            this.GetTakeSampleHistoryAsync(username, null);
        }
        
        /// <remarks/>
        public void GetTakeSampleHistoryAsync(string username, object userState) {
            if ((this.GetTakeSampleHistoryOperationCompleted == null)) {
                this.GetTakeSampleHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTakeSampleHistoryOperationCompleted);
            }
            this.InvokeAsync("GetTakeSampleHistory", new object[] {
                        username}, this.GetTakeSampleHistoryOperationCompleted, userState);
        }
        
        private void OnGetTakeSampleHistoryOperationCompleted(object arg) {
            if ((this.GetTakeSampleHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTakeSampleHistoryCompleted(this, new GetTakeSampleHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnits", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public tUnits[] GetUnits() {
            object[] results = this.Invoke("GetUnits", new object[0]);
            return ((tUnits[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUnitsAsync() {
            this.GetUnitsAsync(null);
        }
        
        /// <remarks/>
        public void GetUnitsAsync(object userState) {
            if ((this.GetUnitsOperationCompleted == null)) {
                this.GetUnitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnitsOperationCompleted);
            }
            this.InvokeAsync("GetUnits", new object[0], this.GetUnitsOperationCompleted, userState);
        }
        
        private void OnGetUnitsOperationCompleted(object arg) {
            if ((this.GetUnitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnitsCompleted(this, new GetUnitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetValueConfiglogger", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ConfigLogger GetValueConfiglogger(string siteId) {
            object[] results = this.Invoke("GetValueConfiglogger", new object[] {
                        siteId});
            return ((ConfigLogger)(results[0]));
        }
        
        /// <remarks/>
        public void GetValueConfigloggerAsync(string siteId) {
            this.GetValueConfigloggerAsync(siteId, null);
        }
        
        /// <remarks/>
        public void GetValueConfigloggerAsync(string siteId, object userState) {
            if ((this.GetValueConfigloggerOperationCompleted == null)) {
                this.GetValueConfigloggerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValueConfigloggerOperationCompleted);
            }
            this.InvokeAsync("GetValueConfiglogger", new object[] {
                        siteId}, this.GetValueConfigloggerOperationCompleted, userState);
        }
        
        private void OnGetValueConfigloggerOperationCompleted(object arg) {
            if ((this.GetValueConfigloggerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValueConfigloggerCompleted(this, new GetValueConfigloggerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertUpdateChannelConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertUpdateChannelConfig(tChannelConfigurations tChannel) {
            object[] results = this.Invoke("InsertUpdateChannelConfig", new object[] {
                        tChannel});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertUpdateChannelConfigAsync(tChannelConfigurations tChannel) {
            this.InsertUpdateChannelConfigAsync(tChannel, null);
        }
        
        /// <remarks/>
        public void InsertUpdateChannelConfigAsync(tChannelConfigurations tChannel, object userState) {
            if ((this.InsertUpdateChannelConfigOperationCompleted == null)) {
                this.InsertUpdateChannelConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUpdateChannelConfigOperationCompleted);
            }
            this.InvokeAsync("InsertUpdateChannelConfig", new object[] {
                        tChannel}, this.InsertUpdateChannelConfigOperationCompleted, userState);
        }
        
        private void OnInsertUpdateChannelConfigOperationCompleted(object arg) {
            if ((this.InsertUpdateChannelConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertUpdateChannelConfigCompleted(this, new InsertUpdateChannelConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertUpdateConfigLogger", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertUpdateConfigLogger(ConfigLogger config) {
            object[] results = this.Invoke("InsertUpdateConfigLogger", new object[] {
                        config});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertUpdateConfigLoggerAsync(ConfigLogger config) {
            this.InsertUpdateConfigLoggerAsync(config, null);
        }
        
        /// <remarks/>
        public void InsertUpdateConfigLoggerAsync(ConfigLogger config, object userState) {
            if ((this.InsertUpdateConfigLoggerOperationCompleted == null)) {
                this.InsertUpdateConfigLoggerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUpdateConfigLoggerOperationCompleted);
            }
            this.InvokeAsync("InsertUpdateConfigLogger", new object[] {
                        config}, this.InsertUpdateConfigLoggerOperationCompleted, userState);
        }
        
        private void OnInsertUpdateConfigLoggerOperationCompleted(object arg) {
            if ((this.InsertUpdateConfigLoggerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertUpdateConfigLoggerCompleted(this, new InsertUpdateConfigLoggerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LatLng", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public toado LatLng(string userName) {
            object[] results = this.Invoke("LatLng", new object[] {
                        userName});
            return ((toado)(results[0]));
        }
        
        /// <remarks/>
        public void LatLngAsync(string userName) {
            this.LatLngAsync(userName, null);
        }
        
        /// <remarks/>
        public void LatLngAsync(string userName, object userState) {
            if ((this.LatLngOperationCompleted == null)) {
                this.LatLngOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLatLngOperationCompleted);
            }
            this.InvokeAsync("LatLng", new object[] {
                        userName}, this.LatLngOperationCompleted, userState);
        }
        
        private void OnLatLngOperationCompleted(object arg) {
            if ((this.LatLngCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LatLngCompleted(this, new LatLngCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Logo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public logo Logo(string path) {
            object[] results = this.Invoke("Logo", new object[] {
                        path});
            return ((logo)(results[0]));
        }
        
        /// <remarks/>
        public void LogoAsync(string path) {
            this.LogoAsync(path, null);
        }
        
        /// <remarks/>
        public void LogoAsync(string path, object userState) {
            if ((this.LogoOperationCompleted == null)) {
                this.LogoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoOperationCompleted);
            }
            this.InvokeAsync("Logo", new object[] {
                        path}, this.LogoOperationCompleted, userState);
        }
        
        private void OnLogoOperationCompleted(object arg) {
            if ((this.LogoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoCompleted(this, new LogoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PushNotification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PushNotification(string[] fcmToken, string titleNoti, string bodyNoti) {
            this.Invoke("PushNotification", new object[] {
                        fcmToken,
                        titleNoti,
                        bodyNoti});
        }
        
        /// <remarks/>
        public void PushNotificationAsync(string[] fcmToken, string titleNoti, string bodyNoti) {
            this.PushNotificationAsync(fcmToken, titleNoti, bodyNoti, null);
        }
        
        /// <remarks/>
        public void PushNotificationAsync(string[] fcmToken, string titleNoti, string bodyNoti, object userState) {
            if ((this.PushNotificationOperationCompleted == null)) {
                this.PushNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPushNotificationOperationCompleted);
            }
            this.InvokeAsync("PushNotification", new object[] {
                        fcmToken,
                        titleNoti,
                        bodyNoti}, this.PushNotificationOperationCompleted, userState);
        }
        
        private void OnPushNotificationOperationCompleted(object arg) {
            if ((this.PushNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PushNotificationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveTokenLogoutApp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveTokenLogoutApp(string token) {
            object[] results = this.Invoke("RemoveTokenLogoutApp", new object[] {
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveTokenLogoutAppAsync(string token) {
            this.RemoveTokenLogoutAppAsync(token, null);
        }
        
        /// <remarks/>
        public void RemoveTokenLogoutAppAsync(string token, object userState) {
            if ((this.RemoveTokenLogoutAppOperationCompleted == null)) {
                this.RemoveTokenLogoutAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveTokenLogoutAppOperationCompleted);
            }
            this.InvokeAsync("RemoveTokenLogoutApp", new object[] {
                        token}, this.RemoveTokenLogoutAppOperationCompleted, userState);
        }
        
        private void OnRemoveTokenLogoutAppOperationCompleted(object arg) {
            if ((this.RemoveTokenLogoutAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveTokenLogoutAppCompleted(this, new RemoveTokenLogoutAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResetSampler", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public result_sampler ResetSampler(string ip, string port, string partnerid) {
            object[] results = this.Invoke("ResetSampler", new object[] {
                        ip,
                        port,
                        partnerid});
            return ((result_sampler)(results[0]));
        }
        
        /// <remarks/>
        public void ResetSamplerAsync(string ip, string port, string partnerid) {
            this.ResetSamplerAsync(ip, port, partnerid, null);
        }
        
        /// <remarks/>
        public void ResetSamplerAsync(string ip, string port, string partnerid, object userState) {
            if ((this.ResetSamplerOperationCompleted == null)) {
                this.ResetSamplerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetSamplerOperationCompleted);
            }
            this.InvokeAsync("ResetSampler", new object[] {
                        ip,
                        port,
                        partnerid}, this.ResetSamplerOperationCompleted, userState);
        }
        
        private void OnResetSamplerOperationCompleted(object arg) {
            if ((this.ResetSamplerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetSamplerCompleted(this, new ResetSamplerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendNotification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendNotification(string DeviceToken, string title, string msg) {
            object[] results = this.Invoke("SendNotification", new object[] {
                        DeviceToken,
                        title,
                        msg});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendNotificationAsync(string DeviceToken, string title, string msg) {
            this.SendNotificationAsync(DeviceToken, title, msg, null);
        }
        
        /// <remarks/>
        public void SendNotificationAsync(string DeviceToken, string title, string msg, object userState) {
            if ((this.SendNotificationOperationCompleted == null)) {
                this.SendNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendNotificationOperationCompleted);
            }
            this.InvokeAsync("SendNotification", new object[] {
                        DeviceToken,
                        title,
                        msg}, this.SendNotificationOperationCompleted, userState);
        }
        
        private void OnSendNotificationOperationCompleted(object arg) {
            if ((this.SendNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendNotificationCompleted(this, new SendNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitNotification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SubmitNotification(string loggerID, string title, string body) {
            object[] results = this.Invoke("SubmitNotification", new object[] {
                        loggerID,
                        title,
                        body});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitNotificationAsync(string loggerID, string title, string body) {
            this.SubmitNotificationAsync(loggerID, title, body, null);
        }
        
        /// <remarks/>
        public void SubmitNotificationAsync(string loggerID, string title, string body, object userState) {
            if ((this.SubmitNotificationOperationCompleted == null)) {
                this.SubmitNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitNotificationOperationCompleted);
            }
            this.InvokeAsync("SubmitNotification", new object[] {
                        loggerID,
                        title,
                        body}, this.SubmitNotificationOperationCompleted, userState);
        }
        
        private void OnSubmitNotificationOperationCompleted(object arg) {
            if ((this.SubmitNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitNotificationCompleted(this, new SubmitNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStatusPushNoti", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateStatusPushNoti(string token, bool status) {
            object[] results = this.Invoke("UpdateStatusPushNoti", new object[] {
                        token,
                        status});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStatusPushNotiAsync(string token, bool status) {
            this.UpdateStatusPushNotiAsync(token, status, null);
        }
        
        /// <remarks/>
        public void UpdateStatusPushNotiAsync(string token, bool status, object userState) {
            if ((this.UpdateStatusPushNotiOperationCompleted == null)) {
                this.UpdateStatusPushNotiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStatusPushNotiOperationCompleted);
            }
            this.InvokeAsync("UpdateStatusPushNoti", new object[] {
                        token,
                        status}, this.UpdateStatusPushNotiOperationCompleted, userState);
        }
        
        private void OnUpdateStatusPushNotiOperationCompleted(object arg) {
            if ((this.UpdateStatusPushNotiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStatusPushNotiCompleted(this, new UpdateStatusPushNotiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class result_sampler {
        
        private string resultField;
        
        private string knumberField;
        
        /// <remarks/>
        public string Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string Knumber {
            get {
                return this.knumberField;
            }
            set {
                this.knumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class logo {
        
        private string pathField;
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class toado {
        
        private string latField;
        
        private string lngField;
        
        /// <remarks/>
        public string Lat {
            get {
                return this.latField;
            }
            set {
                this.latField = value;
            }
        }
        
        /// <remarks/>
        public string Lng {
            get {
                return this.lngField;
            }
            set {
                this.lngField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ConfigLogger {
        
        private string siteAliasNameField;
        
        private string consumerIdField;
        
        private string descriptionField;
        
        private string displayGroupField;
        
        private string latitudeField;
        
        private string locationField;
        
        private string loggerIdField;
        
        private string longitudeField;
        
        private string siteIdField;
        
        private string startDayField;
        
        private string startHourField;
        
        private System.Nullable<int> zoomField;
        
        private string telephoneNumberField;
        
        private string meterSerialField;
        
        private string transmitterSerialField;
        
        private string loggerSerialField;
        
        private string statusField;
        
        private string availabilityField;
        
        private string staffsField;
        
        private string pipeSizeField;
        
        private string setDiffValueField;
        
        private string setDelayTimeField;
        
        private string dMA_InField;
        
        private string dMA_OutField;
        
        private bool checkedField;
        
        private string dateChangedField;
        
        private string dtmMeterChangedField;
        
        private string dtmTransmitterChangedField;
        
        private string dtmLoggerChangedField;
        
        /// <remarks/>
        public string SiteAliasName {
            get {
                return this.siteAliasNameField;
            }
            set {
                this.siteAliasNameField = value;
            }
        }
        
        /// <remarks/>
        public string ConsumerId {
            get {
                return this.consumerIdField;
            }
            set {
                this.consumerIdField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayGroup {
            get {
                return this.displayGroupField;
            }
            set {
                this.displayGroupField = value;
            }
        }
        
        /// <remarks/>
        public string Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public string LoggerId {
            get {
                return this.loggerIdField;
            }
            set {
                this.loggerIdField = value;
            }
        }
        
        /// <remarks/>
        public string Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public string SiteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
            }
        }
        
        /// <remarks/>
        public string StartDay {
            get {
                return this.startDayField;
            }
            set {
                this.startDayField = value;
            }
        }
        
        /// <remarks/>
        public string StartHour {
            get {
                return this.startHourField;
            }
            set {
                this.startHourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Zoom {
            get {
                return this.zoomField;
            }
            set {
                this.zoomField = value;
            }
        }
        
        /// <remarks/>
        public string TelephoneNumber {
            get {
                return this.telephoneNumberField;
            }
            set {
                this.telephoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string MeterSerial {
            get {
                return this.meterSerialField;
            }
            set {
                this.meterSerialField = value;
            }
        }
        
        /// <remarks/>
        public string TransmitterSerial {
            get {
                return this.transmitterSerialField;
            }
            set {
                this.transmitterSerialField = value;
            }
        }
        
        /// <remarks/>
        public string LoggerSerial {
            get {
                return this.loggerSerialField;
            }
            set {
                this.loggerSerialField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Availability {
            get {
                return this.availabilityField;
            }
            set {
                this.availabilityField = value;
            }
        }
        
        /// <remarks/>
        public string Staffs {
            get {
                return this.staffsField;
            }
            set {
                this.staffsField = value;
            }
        }
        
        /// <remarks/>
        public string PipeSize {
            get {
                return this.pipeSizeField;
            }
            set {
                this.pipeSizeField = value;
            }
        }
        
        /// <remarks/>
        public string SetDiffValue {
            get {
                return this.setDiffValueField;
            }
            set {
                this.setDiffValueField = value;
            }
        }
        
        /// <remarks/>
        public string SetDelayTime {
            get {
                return this.setDelayTimeField;
            }
            set {
                this.setDelayTimeField = value;
            }
        }
        
        /// <remarks/>
        public string DMA_In {
            get {
                return this.dMA_InField;
            }
            set {
                this.dMA_InField = value;
            }
        }
        
        /// <remarks/>
        public string DMA_Out {
            get {
                return this.dMA_OutField;
            }
            set {
                this.dMA_OutField = value;
            }
        }
        
        /// <remarks/>
        public bool Checked {
            get {
                return this.checkedField;
            }
            set {
                this.checkedField = value;
            }
        }
        
        /// <remarks/>
        public string DateChanged {
            get {
                return this.dateChangedField;
            }
            set {
                this.dateChangedField = value;
            }
        }
        
        /// <remarks/>
        public string dtmMeterChanged {
            get {
                return this.dtmMeterChangedField;
            }
            set {
                this.dtmMeterChangedField = value;
            }
        }
        
        /// <remarks/>
        public string dtmTransmitterChanged {
            get {
                return this.dtmTransmitterChangedField;
            }
            set {
                this.dtmTransmitterChangedField = value;
            }
        }
        
        /// <remarks/>
        public string dtmLoggerChanged {
            get {
                return this.dtmLoggerChangedField;
            }
            set {
                this.dtmLoggerChangedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class tUnits {
        
        private string unitField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class t_TakeSampleHistory {
        
        private int idField;
        
        private string siteIDField;
        
        private System.Nullable<System.DateTime> timeStampField;
        
        private bool statusField;
        
        private string userTakeField;
        
        private string typeField;
        
        private string descriptionField;
        
        private System.Nullable<bool> isNotifiedField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        public bool Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string UserTake {
            get {
                return this.userTakeField;
            }
            set {
                this.userTakeField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsNotified {
            get {
                return this.isNotifiedField;
            }
            set {
                this.isNotifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MSite {
        
        private string siteIdField;
        
        private string siteAliasNameField;
        
        private string locationField;
        
        private double latitudeField;
        
        private double longitudeField;
        
        private string loggerIdField;
        
        private System.Nullable<double> labelAnchorXField;
        
        private System.Nullable<double> labelAnchorYField;
        
        private string displayGroupField;
        
        private System.Nullable<bool> status1Field;
        
        private System.Nullable<bool> status2Field;
        
        private System.Nullable<int> timeDelayAlarmField;
        
        /// <remarks/>
        public string SiteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
            }
        }
        
        /// <remarks/>
        public string SiteAliasName {
            get {
                return this.siteAliasNameField;
            }
            set {
                this.siteAliasNameField = value;
            }
        }
        
        /// <remarks/>
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public string LoggerId {
            get {
                return this.loggerIdField;
            }
            set {
                this.loggerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> LabelAnchorX {
            get {
                return this.labelAnchorXField;
            }
            set {
                this.labelAnchorXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> LabelAnchorY {
            get {
                return this.labelAnchorYField;
            }
            set {
                this.labelAnchorYField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayGroup {
            get {
                return this.displayGroupField;
            }
            set {
                this.displayGroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Status1 {
            get {
                return this.status1Field;
            }
            set {
                this.status1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Status2 {
            get {
                return this.status2Field;
            }
            set {
                this.status2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TimeDelayAlarm {
            get {
                return this.timeDelayAlarmField;
            }
            set {
                this.timeDelayAlarmField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class mySite {
        
        private string siteIDField;
        
        /// <remarks/>
        public string SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ChannelMultipleDataViewModel {
        
        private System.DateTime timestampField;
        
        private System.Nullable<double>[] valuesField;
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute()]
        public System.Nullable<double>[] Values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MSampler {
        
        private string stationIdField;
        
        private string ipaddressField;
        
        private string portField;
        
        private string partnerIdField;
        
        private string timeField;
        
        /// <remarks/>
        public string stationId {
            get {
                return this.stationIdField;
            }
            set {
                this.stationIdField = value;
            }
        }
        
        /// <remarks/>
        public string ipaddress {
            get {
                return this.ipaddressField;
            }
            set {
                this.ipaddressField = value;
            }
        }
        
        /// <remarks/>
        public string port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        public string partnerId {
            get {
                return this.partnerIdField;
            }
            set {
                this.partnerIdField = value;
            }
        }
        
        /// <remarks/>
        public string time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MyCusComer {
        
        private string cuscomerIdField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string CuscomerId {
            get {
                return this.cuscomerIdField;
            }
            set {
                this.cuscomerIdField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DisplayGroup {
        
        private string groupField;
        
        private string descriptionField;
        
        private string nameField;
        
        /// <remarks/>
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class tGroupChannel {
        
        private string groupChannelField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string GroupChannel {
            get {
                return this.groupChannelField;
            }
            set {
                this.groupChannelField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GroupChannels {
        
        private string groupChannelField;
        
        private MChannel[] channelsField;
        
        /// <remarks/>
        public string GroupChannel {
            get {
                return this.groupChannelField;
            }
            set {
                this.groupChannelField = value;
            }
        }
        
        /// <remarks/>
        public MChannel[] Channels {
            get {
                return this.channelsField;
            }
            set {
                this.channelsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MChannel {
        
        private string channelIdField;
        
        private string loggerIdField;
        
        private string channelNameField;
        
        private string unitField;
        
        private string descriptionField;
        
        private System.Nullable<bool> forwardFlowField;
        
        private System.Nullable<bool> reverseFlowField;
        
        private int statusField;
        
        private string timeStampField;
        
        private string lastValueField;
        
        private string indexTimeStampField;
        
        private string lastIndexField;
        
        private bool displayOnLabelField;
        
        private string strTimeStampField;
        
        private string yyyyField;
        
        private string mmField;
        
        private string ddField;
        
        private string hhField;
        
        private string mmField1;
        
        /// <remarks/>
        public string ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        public string LoggerId {
            get {
                return this.loggerIdField;
            }
            set {
                this.loggerIdField = value;
            }
        }
        
        /// <remarks/>
        public string ChannelName {
            get {
                return this.channelNameField;
            }
            set {
                this.channelNameField = value;
            }
        }
        
        /// <remarks/>
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ForwardFlow {
            get {
                return this.forwardFlowField;
            }
            set {
                this.forwardFlowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ReverseFlow {
            get {
                return this.reverseFlowField;
            }
            set {
                this.reverseFlowField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        public string LastValue {
            get {
                return this.lastValueField;
            }
            set {
                this.lastValueField = value;
            }
        }
        
        /// <remarks/>
        public string IndexTimeStamp {
            get {
                return this.indexTimeStampField;
            }
            set {
                this.indexTimeStampField = value;
            }
        }
        
        /// <remarks/>
        public string LastIndex {
            get {
                return this.lastIndexField;
            }
            set {
                this.lastIndexField = value;
            }
        }
        
        /// <remarks/>
        public bool DisplayOnLabel {
            get {
                return this.displayOnLabelField;
            }
            set {
                this.displayOnLabelField = value;
            }
        }
        
        /// <remarks/>
        public string StrTimeStamp {
            get {
                return this.strTimeStampField;
            }
            set {
                this.strTimeStampField = value;
            }
        }
        
        /// <remarks/>
        public string yyyy {
            get {
                return this.yyyyField;
            }
            set {
                this.yyyyField = value;
            }
        }
        
        /// <remarks/>
        public string MM {
            get {
                return this.mmField;
            }
            set {
                this.mmField = value;
            }
        }
        
        /// <remarks/>
        public string dd {
            get {
                return this.ddField;
            }
            set {
                this.ddField = value;
            }
        }
        
        /// <remarks/>
        public string HH {
            get {
                return this.hhField;
            }
            set {
                this.hhField = value;
            }
        }
        
        /// <remarks/>
        public string mm {
            get {
                return this.mmField1;
            }
            set {
                this.mmField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DataAll {
        
        private string siteIdField;
        
        private string siteAliasNameField;
        
        private string locationField;
        
        private double latitudeField;
        
        private double longitudeField;
        
        private string loggerIdField;
        
        private System.Nullable<double> labelAnchorXField;
        
        private System.Nullable<double> labelAnchorYField;
        
        private GroupChannels[] lstGroupChannelsField;
        
        /// <remarks/>
        public string SiteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
            }
        }
        
        /// <remarks/>
        public string SiteAliasName {
            get {
                return this.siteAliasNameField;
            }
            set {
                this.siteAliasNameField = value;
            }
        }
        
        /// <remarks/>
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public string LoggerId {
            get {
                return this.loggerIdField;
            }
            set {
                this.loggerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> LabelAnchorX {
            get {
                return this.labelAnchorXField;
            }
            set {
                this.labelAnchorXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> LabelAnchorY {
            get {
                return this.labelAnchorYField;
            }
            set {
                this.labelAnchorYField = value;
            }
        }
        
        /// <remarks/>
        public GroupChannels[] lstGroupChannels {
            get {
                return this.lstGroupChannelsField;
            }
            set {
                this.lstGroupChannelsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GroupLogger {
        
        private string displayGroupField;
        
        private string nameField;
        
        private DataAll[] lstDataAllField;
        
        /// <remarks/>
        public string DisplayGroup {
            get {
                return this.displayGroupField;
            }
            set {
                this.displayGroupField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public DataAll[] lstDataAll {
            get {
                return this.lstDataAllField;
            }
            set {
                this.lstDataAllField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ComplexData {
        
        private System.Nullable<int> nrField;
        
        private string siteIdField;
        
        private string siteAliasNameField;
        
        private string loggerIdField;
        
        private string locationField;
        
        private System.Nullable<System.DateTime> timeStampField;
        
        private System.Nullable<double> pressure1Field;
        
        private System.Nullable<double> pressure2Field;
        
        private System.Nullable<double> forwardFlowField;
        
        private System.Nullable<double> reverseFlowField;
        
        private System.Nullable<double> forwardIndexField;
        
        private System.Nullable<double> reverseIndexField;
        
        private string alarmField;
        
        private System.Nullable<double> netIndexField;
        
        private string pressure1UnitField;
        
        private string pressure2UnitField;
        
        private string forwardFlowUnitField;
        
        private string reverseFlowUnitField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Nr {
            get {
                return this.nrField;
            }
            set {
                this.nrField = value;
            }
        }
        
        /// <remarks/>
        public string SiteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
            }
        }
        
        /// <remarks/>
        public string SiteAliasName {
            get {
                return this.siteAliasNameField;
            }
            set {
                this.siteAliasNameField = value;
            }
        }
        
        /// <remarks/>
        public string LoggerId {
            get {
                return this.loggerIdField;
            }
            set {
                this.loggerIdField = value;
            }
        }
        
        /// <remarks/>
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Pressure1 {
            get {
                return this.pressure1Field;
            }
            set {
                this.pressure1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Pressure2 {
            get {
                return this.pressure2Field;
            }
            set {
                this.pressure2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ForwardFlow {
            get {
                return this.forwardFlowField;
            }
            set {
                this.forwardFlowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ReverseFlow {
            get {
                return this.reverseFlowField;
            }
            set {
                this.reverseFlowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ForwardIndex {
            get {
                return this.forwardIndexField;
            }
            set {
                this.forwardIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ReverseIndex {
            get {
                return this.reverseIndexField;
            }
            set {
                this.reverseIndexField = value;
            }
        }
        
        /// <remarks/>
        public string Alarm {
            get {
                return this.alarmField;
            }
            set {
                this.alarmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> NetIndex {
            get {
                return this.netIndexField;
            }
            set {
                this.netIndexField = value;
            }
        }
        
        /// <remarks/>
        public string Pressure1Unit {
            get {
                return this.pressure1UnitField;
            }
            set {
                this.pressure1UnitField = value;
            }
        }
        
        /// <remarks/>
        public string Pressure2Unit {
            get {
                return this.pressure2UnitField;
            }
            set {
                this.pressure2UnitField = value;
            }
        }
        
        /// <remarks/>
        public string ForwardFlowUnit {
            get {
                return this.forwardFlowUnitField;
            }
            set {
                this.forwardFlowUnitField = value;
            }
        }
        
        /// <remarks/>
        public string ReverseFlowUnit {
            get {
                return this.reverseFlowUnitField;
            }
            set {
                this.reverseFlowUnitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MChannelNew {
        
        private string channelIdField;
        
        private string loggerIdField;
        
        private string channelNameField;
        
        /// <remarks/>
        public string ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        public string LoggerId {
            get {
                return this.loggerIdField;
            }
            set {
                this.loggerIdField = value;
            }
        }
        
        /// <remarks/>
        public string ChannelName {
            get {
                return this.channelNameField;
            }
            set {
                this.channelNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LoggerData {
        
        private System.DateTime timeStampField;
        
        private System.Nullable<double> valueField;
        
        /// <remarks/>
        public System.DateTime TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class tChannelConfigurations {
        
        private string channelIdField;
        
        private string loggerIdField;
        
        private string siteIdField;
        
        private string telephoneNumberField;
        
        private string startHourField;
        
        private string channelNameField;
        
        private string unitField;
        
        private string descriptionField;
        
        private System.Nullable<bool> pressure1Field;
        
        private System.Nullable<bool> pressure2Field;
        
        private System.Nullable<bool> forwardFlowField;
        
        private System.Nullable<bool> reverseFlowField;
        
        private string timeStampField;
        
        private string lastValueField;
        
        private string indexTimeStampField;
        
        private string lastIndexField;
        
        private System.Nullable<bool> displayOnLabelField;
        
        private System.Nullable<bool> channelOtherField;
        
        private string baseminField;
        
        private string basemaxField;
        
        private string groupChannelField;
        
        private System.Nullable<bool> displayOnGraphField;
        
        private string baselineField;
        
        /// <remarks/>
        public string ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        public string LoggerId {
            get {
                return this.loggerIdField;
            }
            set {
                this.loggerIdField = value;
            }
        }
        
        /// <remarks/>
        public string SiteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
            }
        }
        
        /// <remarks/>
        public string TelephoneNumber {
            get {
                return this.telephoneNumberField;
            }
            set {
                this.telephoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string StartHour {
            get {
                return this.startHourField;
            }
            set {
                this.startHourField = value;
            }
        }
        
        /// <remarks/>
        public string ChannelName {
            get {
                return this.channelNameField;
            }
            set {
                this.channelNameField = value;
            }
        }
        
        /// <remarks/>
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Pressure1 {
            get {
                return this.pressure1Field;
            }
            set {
                this.pressure1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Pressure2 {
            get {
                return this.pressure2Field;
            }
            set {
                this.pressure2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ForwardFlow {
            get {
                return this.forwardFlowField;
            }
            set {
                this.forwardFlowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ReverseFlow {
            get {
                return this.reverseFlowField;
            }
            set {
                this.reverseFlowField = value;
            }
        }
        
        /// <remarks/>
        public string TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        public string LastValue {
            get {
                return this.lastValueField;
            }
            set {
                this.lastValueField = value;
            }
        }
        
        /// <remarks/>
        public string IndexTimeStamp {
            get {
                return this.indexTimeStampField;
            }
            set {
                this.indexTimeStampField = value;
            }
        }
        
        /// <remarks/>
        public string LastIndex {
            get {
                return this.lastIndexField;
            }
            set {
                this.lastIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> DisplayOnLabel {
            get {
                return this.displayOnLabelField;
            }
            set {
                this.displayOnLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ChannelOther {
            get {
                return this.channelOtherField;
            }
            set {
                this.channelOtherField = value;
            }
        }
        
        /// <remarks/>
        public string basemin {
            get {
                return this.baseminField;
            }
            set {
                this.baseminField = value;
            }
        }
        
        /// <remarks/>
        public string basemax {
            get {
                return this.basemaxField;
            }
            set {
                this.basemaxField = value;
            }
        }
        
        /// <remarks/>
        public string GroupChannel {
            get {
                return this.groupChannelField;
            }
            set {
                this.groupChannelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> DisplayOnGraph {
            get {
                return this.displayOnGraphField;
            }
            set {
                this.displayOnGraphField = value;
            }
        }
        
        /// <remarks/>
        public string Baseline {
            get {
                return this.baselineField;
            }
            set {
                this.baselineField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class tSiteStatus {
        
        private string statusField;
        
        private string descriptionField;
        
        private string languageField;
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class tSiteAvailabilities {
        
        private string availabilityField;
        
        private string descriptionField;
        
        private string languageField;
        
        /// <remarks/>
        public string Availability {
            get {
                return this.availabilityField;
            }
            set {
                this.availabilityField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Alarm {
        
        private string channelIdField;
        
        private string channelNameField;
        
        private string unitField;
        
        private string descriptionField;
        
        private System.Nullable<System.DateTime> timeStampField;
        
        private double lastValueField;
        
        private string strTimeStampField;
        
        private string strvalueField;
        
        private System.Nullable<bool> statusViewAlarmField;
        
        private string yyyyField;
        
        private string mmField;
        
        private string ddField;
        
        private string hhField;
        
        private string mmField1;
        
        /// <remarks/>
        public string ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        public string ChannelName {
            get {
                return this.channelNameField;
            }
            set {
                this.channelNameField = value;
            }
        }
        
        /// <remarks/>
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        public double LastValue {
            get {
                return this.lastValueField;
            }
            set {
                this.lastValueField = value;
            }
        }
        
        /// <remarks/>
        public string StrTimeStamp {
            get {
                return this.strTimeStampField;
            }
            set {
                this.strTimeStampField = value;
            }
        }
        
        /// <remarks/>
        public string Strvalue {
            get {
                return this.strvalueField;
            }
            set {
                this.strvalueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> StatusViewAlarm {
            get {
                return this.statusViewAlarmField;
            }
            set {
                this.statusViewAlarmField = value;
            }
        }
        
        /// <remarks/>
        public string yyyy {
            get {
                return this.yyyyField;
            }
            set {
                this.yyyyField = value;
            }
        }
        
        /// <remarks/>
        public string MM {
            get {
                return this.mmField;
            }
            set {
                this.mmField = value;
            }
        }
        
        /// <remarks/>
        public string dd {
            get {
                return this.ddField;
            }
            set {
                this.ddField = value;
            }
        }
        
        /// <remarks/>
        public string HH {
            get {
                return this.hhField;
            }
            set {
                this.hhField = value;
            }
        }
        
        /// <remarks/>
        public string mm {
            get {
                return this.mmField1;
            }
            set {
                this.mmField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AlarmAll {
        
        private string siteIdField;
        
        private string siteAliasNameField;
        
        private string loggerIdField;
        
        private Alarm[] alarmsField;
        
        /// <remarks/>
        public string SiteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
            }
        }
        
        /// <remarks/>
        public string SiteAliasName {
            get {
                return this.siteAliasNameField;
            }
            set {
                this.siteAliasNameField = value;
            }
        }
        
        /// <remarks/>
        public string LoggerId {
            get {
                return this.loggerIdField;
            }
            set {
                this.loggerIdField = value;
            }
        }
        
        /// <remarks/>
        public Alarm[] Alarms {
            get {
                return this.alarmsField;
            }
            set {
                this.alarmsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class myLogin {
        
        private string usernameField;
        
        /// <remarks/>
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ConfirmAlarmCompletedEventHandler(object sender, ConfirmAlarmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmAlarmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmAlarmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ControlSamplerCompletedEventHandler(object sender, ControlSamplerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ControlSamplerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ControlSamplerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result_sampler Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result_sampler)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteChannelByIdCompletedEventHandler(object sender, DeleteChannelByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteChannelByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteChannelByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteSiteConfigCompletedEventHandler(object sender, DeleteSiteConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSiteConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSiteConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DologinCompletedEventHandler(object sender, DologinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DologinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DologinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public myLogin Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((myLogin)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAlarmCompletedEventHandler(object sender, GetAlarmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlarmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlarmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlarmAll[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlarmAll[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllSiteAvailabilitiesCompletedEventHandler(object sender, GetAllSiteAvailabilitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSiteAvailabilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSiteAvailabilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tSiteAvailabilities[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tSiteAvailabilities[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllSiteStatusCompletedEventHandler(object sender, GetAllSiteStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSiteStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSiteStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tSiteStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tSiteStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetChannelByChannelIdCompletedEventHandler(object sender, GetChannelByChannelIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelByChannelIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelByChannelIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tChannelConfigurations Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tChannelConfigurations)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetChannelConfigByLoggerIDCompletedEventHandler(object sender, GetChannelConfigByLoggerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelConfigByLoggerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelConfigByLoggerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tChannelConfigurations[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tChannelConfigurations[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetChannelConfigurationsByLoggerIDCompletedEventHandler(object sender, GetChannelConfigurationsByLoggerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelConfigurationsByLoggerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelConfigurationsByLoggerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MChannel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MChannel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetchanneldetailCompletedEventHandler(object sender, GetchanneldetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetchanneldetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetchanneldetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LoggerData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LoggerData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetChannelLoggerIDCompletedEventHandler(object sender, GetChannelLoggerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelLoggerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelLoggerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MChannelNew[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MChannelNew[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCountAlamrCompletedEventHandler(object sender, GetCountAlamrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountAlamrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountAlamrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCustomComplexDataCompletedEventHandler(object sender, GetCustomComplexDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomComplexDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomComplexDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ComplexData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ComplexData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCustomComplexDataForSiteIdCompletedEventHandler(object sender, GetCustomComplexDataForSiteIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomComplexDataForSiteIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomComplexDataForSiteIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ComplexData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ComplexData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCustomSearchCompletedEventHandler(object sender, GetCustomSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ComplexData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ComplexData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDataAllCompletedEventHandler(object sender, GetDataAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GroupLogger[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GroupLogger[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDeviceTokenFromAppCompletedEventHandler(object sender, GetDeviceTokenFromAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeviceTokenFromAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeviceTokenFromAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetGroupChannelsCompletedEventHandler(object sender, GetGroupChannelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupChannelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupChannelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tGroupChannel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tGroupChannel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetGroupSiteCompletedEventHandler(object sender, GetGroupSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DisplayGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DisplayGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetListCuscomerCompletedEventHandler(object sender, GetListCuscomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListCuscomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListCuscomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MyCusComer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MyCusComer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetListDataControlCompletedEventHandler(object sender, GetListDataControlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListDataControlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListDataControlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MSampler[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MSampler[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMultipleChannelsDataCompletedEventHandler(object sender, GetMultipleChannelsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMultipleChannelsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMultipleChannelsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChannelMultipleDataViewModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChannelMultipleDataViewModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSiteCompletedEventHandler(object sender, GetSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public mySite Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((mySite)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSiteByGroupSiteCompletedEventHandler(object sender, GetSiteByGroupSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteByGroupSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteByGroupSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MSite[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MSite[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSitesByUidCompletedEventHandler(object sender, GetSitesByUidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSitesByUidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSitesByUidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MSite[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MSite[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSitesForMapCompletedEventHandler(object sender, GetSitesForMapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSitesForMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSitesForMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MSite[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MSite[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetTakeSampleHistoryCompletedEventHandler(object sender, GetTakeSampleHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTakeSampleHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTakeSampleHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public t_TakeSampleHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((t_TakeSampleHistory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUnitsCompletedEventHandler(object sender, GetUnitsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tUnits[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tUnits[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetValueConfigloggerCompletedEventHandler(object sender, GetValueConfigloggerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValueConfigloggerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValueConfigloggerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ConfigLogger Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ConfigLogger)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertUpdateChannelConfigCompletedEventHandler(object sender, InsertUpdateChannelConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertUpdateChannelConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertUpdateChannelConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertUpdateConfigLoggerCompletedEventHandler(object sender, InsertUpdateConfigLoggerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertUpdateConfigLoggerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertUpdateConfigLoggerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LatLngCompletedEventHandler(object sender, LatLngCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LatLngCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LatLngCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public toado Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((toado)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LogoCompletedEventHandler(object sender, LogoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public logo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((logo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PushNotificationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveTokenLogoutAppCompletedEventHandler(object sender, RemoveTokenLogoutAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveTokenLogoutAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveTokenLogoutAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ResetSamplerCompletedEventHandler(object sender, ResetSamplerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetSamplerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetSamplerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result_sampler Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result_sampler)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendNotificationCompletedEventHandler(object sender, SendNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SubmitNotificationCompletedEventHandler(object sender, SubmitNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateStatusPushNotiCompletedEventHandler(object sender, UpdateStatusPushNotiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStatusPushNotiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStatusPushNotiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591